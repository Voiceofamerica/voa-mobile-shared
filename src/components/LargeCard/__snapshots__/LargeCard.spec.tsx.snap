// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<LargeCard /> shapshots should render with the given className 1`] = `
<div
  className="card myClass"
  style={undefined}
>
  <div
    className="overText"
    onClick={undefined}
  >
    <resilient-image
      props={
        Object {
          "alwaysShow": true,
          "className": "imageContainer",
          "showSpinner": true,
          "src": undefined,
        }
      }
    />
    <div
      className="gradient"
      style={
        Object {
          "background": "linear-gradient(transparent, rgba(0, 0, 0, 0.9))",
        }
      }
    >
      <div
        className="titleText"
        style={
          Object {
            "color": "#000000",
          }
        }
      >
        <span>
           
          myTitle
        </span>
      </div>
    </div>
  </div>
  <div
    className="underText"
    style={
      Object {
        "background": "#000000",
        "color": "#000000",
      }
    }
  >
    <div
      className="minorTextArea"
    />
  </div>
</div>
`;

exports[`<LargeCard /> shapshots should render with the given icon shown 1`] = `
<div
  className="card undefined"
  style={undefined}
>
  <div
    className="overText"
    onClick={undefined}
  >
    <resilient-image
      props={
        Object {
          "alwaysShow": true,
          "className": "imageContainer",
          "showSpinner": true,
          "src": undefined,
        }
      }
    />
    <div
      className="gradient"
      style={
        Object {
          "background": "linear-gradient(transparent, rgba(0, 0, 0, 0.9))",
        }
      }
    >
      <div
        className="titleText"
        style={
          Object {
            "color": "#000000",
          }
        }
      >
        <span>
          <i
            className="mdi mdi-monitor"
          />
           
          myTitle
        </span>
      </div>
    </div>
  </div>
  <div
    className="underText"
    style={
      Object {
        "background": "#000000",
        "color": "#000000",
      }
    }
  >
    <div
      className="minorTextArea"
    />
  </div>
</div>
`;

exports[`<LargeCard /> shapshots should render with the given image 1`] = `
<div
  className="card undefined"
  style={undefined}
>
  <div
    className="overText"
    onClick={undefined}
  >
    <resilient-image
      props={
        Object {
          "alwaysShow": true,
          "className": "imageContainer",
          "showSpinner": true,
          "src": "myImage",
        }
      }
    />
    <div
      className="gradient"
      style={
        Object {
          "background": "linear-gradient(transparent, rgba(0, 0, 0, 0.9))",
        }
      }
    >
      <div
        className="titleText"
        style={
          Object {
            "color": "#000000",
          }
        }
      >
        <span>
           
          myTitle
        </span>
      </div>
    </div>
  </div>
  <div
    className="underText"
    style={
      Object {
        "background": "#000000",
        "color": "#000000",
      }
    }
  >
    <div
      className="minorTextArea"
    />
  </div>
</div>
`;

exports[`<LargeCard /> shapshots should render with the given minor text 1`] = `
<div
  className="card undefined"
  style={undefined}
>
  <div
    className="overText"
    onClick={undefined}
  >
    <resilient-image
      props={
        Object {
          "alwaysShow": true,
          "className": "imageContainer",
          "showSpinner": true,
          "src": undefined,
        }
      }
    />
    <div
      className="gradient"
      style={
        Object {
          "background": "linear-gradient(transparent, rgba(0, 0, 0, 0.9))",
        }
      }
    >
      <div
        className="titleText"
        style={
          Object {
            "color": "#000000",
          }
        }
      >
        <span>
           
          myTitle
        </span>
      </div>
    </div>
  </div>
  <div
    className="underText"
    style={
      Object {
        "background": "#000000",
        "color": "#000000",
      }
    }
  >
    <div
      className="minorTextArea"
    >
      This is some minor text
    </div>
  </div>
</div>
`;

exports[`<LargeCard /> shapshots should render with the given style 1`] = `
<div
  className="card undefined"
  style={
    Object {
      "bottom": 0,
      "left": 0,
      "right": 0,
      "top": 0,
    }
  }
>
  <div
    className="overText"
    onClick={undefined}
  >
    <resilient-image
      props={
        Object {
          "alwaysShow": true,
          "className": "imageContainer",
          "showSpinner": true,
          "src": undefined,
        }
      }
    />
    <div
      className="gradient"
      style={
        Object {
          "background": "linear-gradient(transparent, rgba(0, 0, 0, 0.9))",
        }
      }
    >
      <div
        className="titleText"
        style={
          Object {
            "color": "#000000",
          }
        }
      >
        <span>
           
          myTitle
        </span>
      </div>
    </div>
  </div>
  <div
    className="underText"
    style={
      Object {
        "background": "#000000",
        "color": "#000000",
      }
    }
  >
    <div
      className="minorTextArea"
    />
  </div>
</div>
`;

exports[`<LargeCard /> shapshots should render with the given title 1`] = `
<div
  className="card undefined"
  style={undefined}
>
  <div
    className="overText"
    onClick={undefined}
  >
    <resilient-image
      props={
        Object {
          "alwaysShow": true,
          "className": "imageContainer",
          "showSpinner": true,
          "src": undefined,
        }
      }
    />
    <div
      className="gradient"
      style={
        Object {
          "background": "linear-gradient(transparent, rgba(0, 0, 0, 0.9))",
        }
      }
    >
      <div
        className="titleText"
        style={
          Object {
            "color": "#000000",
          }
        }
      >
        <span>
           
          myTitle
        </span>
      </div>
    </div>
  </div>
  <div
    className="underText"
    style={
      Object {
        "background": "#000000",
        "color": "#000000",
      }
    }
  >
    <div
      className="minorTextArea"
    />
  </div>
</div>
`;
